# -*- coding: utf-8 -*-
"""Notebook.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/AI-Core/Content-Public/blob/main/Content/units/Cloud-and-DevOps/3.%20Essential%20Cloud%20Technology/1.%20AWS%20RDS/Notebook.ipynb

## AWS RDS

AWS RDS is a service that allows you to create a database in the cloud. This database is highly scalable and has a variety of uses. The service facilitates the creation of different types of databases, such as PostgreSQL, MySQL, Oracle and Amazon Aurora. For demonstration, we will create a PostgreSQL database.

### Creating a PostgreSQL database

Go to the [AWS Console](https://console.aws.amazon.com/console/home), and select the Services tab. Next, click on the RDS tab, followed by `'Create database'`.

![](https://github.com/AI-Core/Content-Public/blob/main/Content/units/Cloud-and-DevOps/3.%20Essential%20Cloud%20Technology/1.%20AWS%20RDS/images/Create_RDS.png?raw=1)

In the next window, select PostgreSQL as the type of database, and select Version 12.5-R1. Make sure to choose the free tier, unless you are willing to pay.

![](https://github.com/AI-Core/Content-Public/blob/main/Content/units/Cloud-and-DevOps/3.%20Essential%20Cloud%20Technology/1.%20AWS%20RDS/images/Create_RDS2.png?raw=1)

Subsequently, provide an identifier for your instance:

![](https://github.com/AI-Core/Content-Public/blob/main/Content/units/Cloud-and-DevOps/3.%20Essential%20Cloud%20Technology/1.%20AWS%20RDS/images/Create_RDS3.png?raw=1)

In the DB instance class, choose db.t2.micro, which is free. In the connectivity options, select publicly accessible, and in Existing Security Group, select the Security Group that we created earlier.

![](https://github.com/AI-Core/Content-Public/blob/main/Content/units/Cloud-and-DevOps/3.%20Essential%20Cloud%20Technology/1.%20AWS%20RDS/images/Create_RDS4.png?raw=1)

Click on Create, and wait for the process to be completed. Note that this might take a while. Once completed, the status should change to `available`. Now, click on the instance ID, and you should see the details of the instance. Take note of the Endpoint, which is the IP address of the database.

![](https://github.com/AI-Core/Content-Public/blob/main/Content/units/Cloud-and-DevOps/3.%20Essential%20Cloud%20Technology/1.%20AWS%20RDS/images/Create_RDS5.png?raw=1)

Once all the steps above have been completed, you should be ready to connect to the database. The default user and database are `postgres` and `postgres`, respectively.
"""

from sqlalchemy import create_engine
DATABASE_TYPE = 'postgresql'
DBAPI = 'psycopg2'
ENDPOINT = 'aicoredb.c8k7he1p0ynz.us-east-1.rds.amazonaws.com' # Change it to your AWS endpoint
USER = 'postgres'
PASSWORD = 'Cosamona94'
PORT = 5432
DATABASE = 'postgres'
engine = create_engine(f"{DATABASE_TYPE}+{DBAPI}://{USER}:{PASSWORD}@{ENDPOINT}:{PORT}/{DATABASE}")

"""Run the following cell to confirm that everything works:"""

engine.connect()

"""Now, we create a new table in our database. We will insert the iris dataset into our database. The iris dataset is a set of measurements of flowers from 150 species. It is a well-known dataset that is used in many machine-learning applications."""

!pip install sklearn

from sklearn.datasets import load_iris
import pandas as pd
data = load_iris()
iris = pd.DataFrame(data['data'], columns=data['feature_names'])
iris.head()

iris.to_sql('iris_dataset', engine, if_exists='replace')

"""Unfortunately, AWS RDS does not allow you to view the tables you created; however, you can still access them using pgAdmin or SQLAlchemy. """

df = pd.read_sql_table('iris_dataset', engine)

df.head()

"""If you go to pgAdmin, you will see the created table. As the first step, we establish a connection to the database:

![](https://github.com/AI-Core/Content-Public/blob/main/Content/units/Cloud-and-DevOps/3.%20Essential%20Cloud%20Technology/1.%20AWS%20RDS/images/pgAdmin4.png?raw=1)

As can be observed, the iris_dataset is contained in the postgres database.

![](https://github.com/AI-Core/Content-Public/blob/main/Content/units/Cloud-and-DevOps/3.%20Essential%20Cloud%20Technology/1.%20AWS%20RDS/images/pgAdmin4_2.png?raw=1)

## Conclusion
At this point, you should have a good understanding of

- the basics of cloud computing.
- how to create Security groups that limit the range of IP addresses that can access the service.
- how to create an RDS instance.
- how to connect to the RDS instance using SQLAlchemy.
- how to create a table in the database.
- how to connect to the database using pgAdmin.
"""